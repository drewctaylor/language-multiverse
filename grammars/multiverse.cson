'scopeName': 'source.multiverse'
'fileTypes': [
  'multiverse'
]
'name': 'Multiverse'
'patterns': [
  {
    'match': '\\s+([0-9]+)\\s+'
    'captures':
      '1':
        'name':'string'
  }
  {
    'match': '\\s+(true)\\s+'
    'captures':
      '1':
        'name':'string'
  }
  {
    'match': '\\s+(false)\\s+'
    'captures':
      '1':
        'name':'string'
  }
  {
    'match': '(goal)\\s+([A-z][A-z0-9]*)'
    'captures':
      '1':
        'name':'keyword'
      '2':
        'name':'identifier'
  }
  {
    'match': '([A-z][A-z0-9]*)\\s+([A-z][A-z0-9]*)'
    'captures':
      '1':
        'name':'identifier'
      '2':
        'name':'entity'
  }
  {
    'match': '\\s+([A-z][A-z0-9]*)\\s*(-=)'
    'captures':
      '1':
        'name':'attribute'
      '2':
        'name':'operator'
  }
  {
    'match': '\\s+([A-z][A-z0-9]*)\\s*(\\+=)'
    'captures':
      '1':
        'name':'attribute'
      '2':
        'name':'operator'
  }
  {
    'match': '\\s+([A-z][A-z0-9]*)\\s*(:=)'
    'captures':
      '1':
        'name':'attribute'
      '2':
        'name':'operator'
  }
  {
    'match': '([A-z][A-z0-9]*)\\s*(==)\\s*([A-z][A-z0-9]*)'
    'captures':
      '1':
        'name':'entity'
      '2':
        'name':'operator'
      '3':
        'name':'entity'
  }
  {
    'match': '([A-z][A-z0-9]*)\\s*(!=)\\s*([A-z][A-z0-9]*)'
    'captures':
      '1':
        'name':'entity'
      '2':
        'name':'operator'
      '3':
        'name':'entity'
  }
  {
    'begin': '(")'
    'beginCaptures' :
      '1':
        'name': 'string'
    'contentName':'string'
    'patterns': [
      {
      'include': '#template'
      }
    ]
    'end' : '(")'
    'endCaptures' :
      '1':
        'name': 'string'
  }
  {
    'match': '([A-z][A-z0-9]*)\\s*(\\.)\\s*([A-z][A-z0-9]*)'
    'comment': 'Match an entity followed by an attribute'
    'captures':
      '1':
        'name': 'entity'
      '2':
        'name': 'operator'
      '3':
        'name': 'attribute'
  }
  {
    'match': '(\\()\\s*([A-z][A-z0-9]*)\\s*(<->)\\s*([A-z][A-z0-9]*)\\s*(\\))\\s*(\\.)\\s*([A-z][A-z0-9]*)'
    'comment': 'Match an attribute with an optional entity.'
    'captures':
      '1':
        'name': 'operator'
      '2':
        'name': 'entity'
      '3':
        'name': 'operator'
      '4':
        'name': 'entity'
      '5':
        'name': 'operator'
      '6':
        'name': 'operator'
      '7':
        'name': 'attribute'
  }
  {
    'match': '(\\()\\s*([A-z][A-z0-9]*)\\s*(->)\\s*([A-z][A-z0-9]*)\\s*(\\))\\s*(\\.)\\s*([A-z][A-z0-9]*)'
    'comment': 'Match an attribute with an optional entity.'
    'captures':
      '1':
        'name': 'operator'
      '2':
        'name': 'entity'
      '3':
        'name': 'operator'
      '4':
        'name': 'entity'
      '5':
        'name': 'operator'
      '6':
        'name': 'operator'
      '7':
        'name': 'attribute'
  }
]
'repository':
  'template':
    'patterns': [
      {
        'begin': '(\\{\\{)'
        'beginCaptures' :
          '1':
            'name': 'template'
        'contentName':'template'
        'patterns': [
          {
          'include': '#attribute'
          }
        ]
        'end' : '(\\}\\})'
        'endCaptures' :
          '1':
            'name': 'template'
      }
    ]
  'attribute':
    'patterns': [
      {
        'match': '([A-z][A-z0-9]*)\\s*(\\.)\\s*([A-z][A-z0-9]*)'
        'comment': 'Match an entity followed by an attribute'
        'captures':
          '1':
            'name': 'entity'
          '2':
            'name': 'operator'
          '3':
            'name': 'attribute'
      }
    ]
